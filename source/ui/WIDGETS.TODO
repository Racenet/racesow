Ok here's a rough list for _all_ controls that we need for the UI
(may be even more than what we actually need due to possible streamlining
and refactoring).
Note that something like " -> DataSource" means that this (list) should be
implemented as dynamically populated object which requires C++-side code.
Also " -> AS" means that we need an AS api to cover an object and provide
support functionality

** NOTE: NO CSS ON THE LIST CAUSE ~ NOTHING IS DONE ON THAT SIDE **
Mark and tag as you wish.

- Serverbrowser
	List	-> DataSource (ch ~DONE)
	Gametype select -> DataSource (also mirrored in local game)
	Options -> AS
	Scan/Refresh/Stop/Info/Connect (not all necessarily as buttons) -> AS

- Tutorials *** IT WONT BE IMPLEMENTED ***
	List -> DataSource
	Launch (doubleclick and/or button)

- Demos
	List -> DataSource (folder view with ..) (koochi done)
	Play (doubleclick and/or button)

- Mods
	List -> DataSource (koochi done: to be tested)
	Use/Activate/Whatever (doubleclick and/or button)

- Local game
	Maplist -> DataSource, may require C++ side custom Element.
	    (See Crizis's concept design for the looks of this
	    http://padpork.warsow-esport.net/b/priv/startserver.png) (tasked to 10098)
	Gametype select -> DataSource
	Options
	Start

- Model customization
	Modelview (tasked to Kurim) -> Decorator
	Modelselect ? -> DataSource (or use fixed models in .rml?)
	Color selector? Just use slider or implement a proper color selector?
		(widget with fixed varying color bg and the slider's value would correspond
		the color on the bg and we could fetch the color from there?)
	Other options (nickname..)

- Options
	(Strong) Crosshair selector -> Datasource? fixed .rml? Images?
	HUD -> Datasource (koochi done)
	Other options

- GFX
	Videomode -> DataSource (koochi done)
	Profile selector?
		Maybe separate page that has an example screen of looks(?) and
		a short snappy explanation of what this profile does and is used for
		(comp/low-pc/gfx$$$).

- Sound (koochi done)
	Sound module -> DataSource / fixed .rml most likely.

